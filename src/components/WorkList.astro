---
import * as work from "../pages/home/work.md";
import Link from "./Link.astro";
export interface Project {
  title: string;
  publishDate: string;
  imgSrc: string;
}

const posts = (await Astro.glob<Project>("../pages/work/*.md"))
  .filter(({ frontmatter }) => !!frontmatter.publishDate)
  .sort(
    (a, b) =>
      new Date(a.frontmatter.publishDate).valueOf() -
      new Date(b.frontmatter.publishDate).valueOf()
  );
---

<div class="work-list">
  <div
    class="heading-panel swup-delay-anim"
    style="animation-delay: var(--delay100)"
  >
    <h5 style="--shade: var(--c-gray);">{work.frontmatter.title}</h5>
    <Link
      url="/archive"
      text="View the archive"
      className="cta cta-link animTrigger"
      title="View the archive"
    />
  </div>
  <ul>
    {
      posts.map((post, i) => (
        <li
          class={"swup-delay-anim"}
          style={"animation-delay:" + (i += 3) + "00ms"}
        >
          <a
            href={post.url}
            title={post.frontmatter.title}
            data-title={post.frontmatter.title}
          >
            <img src={post.frontmatter.imgSrc} alt={post.frontmatter.title} width={425} height={240} loading={i > 6 ? "lazy" : "eager"}/>
          </a>
        </li>
      ))
    }
  </ul>
</div>

<style lang="scss">
  @import "../styles/mixin.scss";

  .work-list {
    margin-block: rem(50);
    ul {
      margin-top: rem(50);
      display: flex;
      flex-flow: row wrap;
      column-gap: 2rem;
      row-gap: 2rem;
      max-width: rem(940);
      img {
        display: block;
      }
      a {
        position: relative;
        display: block;
        &::after,
        &::before {
          content: "";
          position: absolute;
          transition: 300ms;
        }
        &::before {
          width: 100%;
          height: 100%;
          background: rgba(var(--c-black-gradient-1), 0.5);
          border-width: 1px;
          border-style: solid;
          border-color: transparent;
        }
        &::after {
          content: attr(data-title);
          left: 0;
          right: 0;
          top: 0;
          bottom: 0;
          margin: auto;
          font-size: rem(16);
          text-align: center;
          padding-inline: rem(20);
          filter: blur(5px) opacity(0);
          height: fit-content;
          @include bp(1024) {
            font-size: rem(20);
          }
        }
        &:hover {
          &::after {
            filter: blur(0) opacity(1);
          }
          &::before {
            background: rgba(var(--c-black-gradient-1), 0.9);
            border-color: var(--c-green);
          }
        }
      }
      @include bp(515) {
        li {
          width: 45%;
        }
      }
      @include bp(1024) {
        column-gap: 4rem;
        row-gap: 4rem;
      }
    }
    @include bp(500) {
      margin-inline: auto;
      max-width: var(--w-full);
    }
    @include bp(1200) {
      padding-top: rem(70);
    }
  }
  .heading-panel {
    max-width: var(--w-full);
    display: block;
    align-items: center;
    justify-content: space-between;
    @include bp(768) {
      display: flex;
    }
    > .cta {
      margin-top: 0;
      padding-right: 0;
    }
    > h5 {
      opacity: var(--opacity);
      font-size: rem(20);
      font-weight: 600;
      color: var(--c-white);
      font-weight: 400;
      font-family: var(--f-roboto-mono);
      width: fit-content;
      padding: rem(10) rem(20);
      position: relative;
      background-image: linear-gradient(
        var(--shade, --defaultShadeColor),
        var(--shade, --defaultShadeColor)
      );
      background-size: 70% rem(20);
      background-repeat: no-repeat;
      background-position: 0 calc(rem(20) / 5);
    }
    > p {
      color: var(--c-gray-400);
      font-size: rem(18);
      line-height: 1.6;
    }
  }
</style>
