---
const filterSVG = `<feDisplacementMap scale="19" in="SourceGraphic" />`;
const filterSVGSea = `<feDisplacementMap scale="10" in="SourceGraphic" />`;
---

<svg class="water">
  <filter id="turbulence" x="0" y="0" width="100%" height="100%">
    <feTurbulence
      id="sea-filter"
      numOctaves="3"
      seed="1"
      baseFrequency="0.02 0.05"></feTurbulence>
    <Fragment set:html={filterSVG} />

    <animate
      xlink:href="#sea-filter"
      attributeName="baseFrequency"
      dur="60s"
      keyTimes="0;0.5;1"
      values="0.02 0.06;0.04 0.08;0.02 0.06"
      repeatCount="indefinite"></animate>
  </filter>
  <filter id="turbulenceSea" x="0" y="0" width="100%" height="100%">
    <feTurbulence
      id="sea-filter"
      numOctaves="3"
      seed="1"
      baseFrequency="0.02 0.05"></feTurbulence>
    <Fragment set:html={filterSVGSea} />

    <animate
      xlink:href="#sea-filter"
      attributeName="baseFrequency"
      dur="60s"
      keyTimes="0;0.5;1"
      values="0.02 0.06;0.04 0.08;0.02 0.06"
      repeatCount="indefinite"></animate>
  </filter>
</svg>
<div class="water"></div>

<div class="fakeCursor" style="--opacity; --top; --left">
  <img src="../assets/fake_cursor.svg" alt="" width="16" height="21" />
</div>

<style lang="scss">
  @import "../styles/mixin.scss";
  .water {
    display: none;
  }
  .fakeCursor {
    opacity: var(--opacity, 0);
    position: absolute;
    left: var(--top, 0);
    bottom: var(--left, 0);
    filter: blur(2px);
    pointer-events: none;
    transition: opacity 100ms;
    display: none;
    @include bp(1024) {
      display: block;
    }
    @include bp(1440) {
      bottom: calc(var(--left, 0) + -40px);
    }
    > img {
      opacity: 0.2;
      transform: translateX(-1px);
    }
  }
</style>

<script defer>
  const target = document.querySelector(".main-container");
  const fakeCursor = document.querySelector(".fakeCursor");
  const hide = document.querySelector(".cta");
  const placeCursor = (x, y) => {
    fakeCursor.style.setProperty("--top", y + "px");
    fakeCursor.style.setProperty("--left", x + "px");
  };

  hide?.addEventListener("mousemove", () => {
    fakeCursor.style.setProperty("display", "none");
  });
  hide?.addEventListener("mouseleave", () => {
    fakeCursor.style.setProperty("display", "block");
  });

  target?.addEventListener("mousemove", (event) => {
    let opaque = event.clientY / 200 - 1.5;
    let top = event.clientY / 2.56;
    fakeCursor.style.setProperty("--opacity", opaque);
    placeCursor(top, event.clientX);
  });

  target?.addEventListener("mouseleave", () => {
    fakeCursor.style.setProperty("--opacity", 0);
  });
</script>
